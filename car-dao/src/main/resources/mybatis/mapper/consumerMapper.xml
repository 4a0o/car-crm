<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ying.js.car.dao.mybatis.mapper.ConsumerDAO">
  <resultMap id="BaseResultMap" type="com.ying.js.car.dao.model.ConsumerDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="car_type" jdbcType="TINYINT" property="carType" />
    <result column="car_license_num" jdbcType="VARCHAR" property="carLicenseNum" />
    <result column="car_frame_num" jdbcType="VARCHAR" property="carFrameNum" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, address, car_type, car_license_num, car_frame_num, content, gmt_create, 
    gmt_modified, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Consumer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from Consumer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ying.js.car.dao.model.ConsumerDO">
    insert into Consumer (id, name, address, 
      car_type, car_license_num, car_frame_num, 
      content, gmt_create, gmt_modified, 
      phone)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{carType,jdbcType=TINYINT}, #{carLicenseNum,jdbcType=VARCHAR}, #{carFrameNum,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ying.js.car.dao.model.ConsumerDO">
    insert into Consumer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="carType != null">
        car_type,
      </if>
      <if test="carLicenseNum != null">
        car_license_num,
      </if>
      <if test="carFrameNum != null">
        car_frame_num,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="carType != null">
        #{carType,jdbcType=TINYINT},
      </if>
      <if test="carLicenseNum != null">
        #{carLicenseNum,jdbcType=VARCHAR},
      </if>
      <if test="carFrameNum != null">
        #{carFrameNum,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ying.js.car.dao.model.ConsumerDO">
    update Consumer
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="carType != null">
        car_type = #{carType,jdbcType=TINYINT},
      </if>
      <if test="carLicenseNum != null">
        car_license_num = #{carLicenseNum,jdbcType=VARCHAR},
      </if>
      <if test="carFrameNum != null">
        car_frame_num = #{carFrameNum,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ying.js.car.dao.model.ConsumerDO">
    update Consumer
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      car_type = #{carType,jdbcType=TINYINT},
      car_license_num = #{carLicenseNum,jdbcType=VARCHAR},
      car_frame_num = #{carFrameNum,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>